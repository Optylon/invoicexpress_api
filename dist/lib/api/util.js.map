{"version":3,"sources":["lib/api/util.ts"],"names":["baseUrl","accountName","unAuthPostSetup","urlFn","method","url","postSetup","auth","apiKey","putSetup","data","Object","assign","getSetup","listSetup","params","formattedParams","entries","decamelizeKeys","map","key","value","join","toArray","arrayOrElement","Array","isArray"],"mappings":";;;;;;;;;AAKA;;;;;;AAsCA;AACA;AACA;AACO,IAAMA,4BAAU,SAAVA,OAAU;AAAA,wBACVC,WADU;AAAA,CAAhB;AAcA,IAAMC,4CAAkB,SAAlBA,eAAkB,CAACC,KAAD;AAAA,WAC3B,EAAEC,QAAQ,MAAV;AACEC,aAAKF;AADP,KAD2B;AAAA,CAAxB;AAKA,IAAMG,gCAAY,SAAZA,SAAY,CAACC,IAAD,EAAeJ,KAAf,EAAoB;AAAA,QACnCF,WADmC,GACXM,IADW,CACnCN,WADmC;AAAA,QACtBO,MADsB,GACXD,IADW,CACtBC,MADsB;;AAE3C,WACE,EAAEJ,QAAQ,MAAV;AACEI,sBADF;AAEEH,aAAKF,MAAM,EAACF,wBAAD,EAAN;AAFP,KADF;AAKC,CAPI;AASA,IAAMQ,8BAAW,SAAXA,QAAW,CAACF,IAAD,EAAeJ,KAAf,EAAsBO,IAAtB,EAA0B;AAAA,QACxCT,WADwC,GAChBM,IADgB,CACxCN,WADwC;AAAA,QAC3BO,MAD2B,GAChBD,IADgB,CAC3BC,MAD2B;;AAEhD,WACE,EAAEJ,QAAQ,KAAV;AACEI,sBADF;AAEEH,aAAKF,MAAKQ,OAAAC,MAAA,CAAA,EAAEX,wBAAF,EAAA,EAAkBS,IAAlB,CAAL;AAFP,KADF;AAKC,CAPI;AASA,IAAMG,8BAAW,SAAXA,QAAW,CAACN,IAAD,EAAeJ,KAAf,EAA+B;AAAA,QAATO,IAAS,uEAAF,EAAE;AAAA,QAC7CT,WAD6C,GACrBM,IADqB,CAC7CN,WAD6C;AAAA,QAChCO,MADgC,GACrBD,IADqB,CAChCC,MADgC;;AAErD,WACE,EAAEA,cAAF;AACEH,aAAKF,MAAKQ,OAAAC,MAAA,CAAA,EAAEX,wBAAF,EAAA,EAAkBS,IAAlB,CAAL;AADP,KADF;AAIC,CANI;AAQA,IAAMI,gCACX,SADWA,SACX,CAAEP,IAAF,EACEJ,KADF,EAEEY,MAFF,EAEoB;AAAA,QAEZd,WAFY,GAEYM,IAFZ,CAEZN,WAFY;AAAA,QAECO,MAFD,GAEYD,IAFZ,CAECC,MAFD;;AAGpB,QAAMQ,kBACJL,OAAOM,OAAP,CAAe,gBAAMC,cAAN,CAAqBH,MAArB,CAAf,EACOI,GADP,CACW;AAAA;AAAA,YAAEC,GAAF;AAAA,YAAMC,KAAN;;AAAA,eAAoBD,GAApB,SAA2BC,KAA3B;AAAA,KADX,EAEOC,IAFP,CAEY,GAFZ,CADF;AAIA,WACE,EAAEd,cAAF;AACEH,aAAQF,MAAM,EAACF,wBAAD,EAAN,CAAR,SAAgCe;AADlC,KADF;AAIC,CAdI;AAgBP;AACA;AACA;AAEA;;;AAGO,IAAMO,4BAAU,SAAVA,OAAU,CAACC,cAAD;AAAA,WAAoBC,MAAMC,OAAN,CAAcF,cAAd,IACCA,cADD,GAEC,CAACA,cAAD,CAFrB;AAAA,CAAhB","file":"util.js","sourcesContent":["// ---------------------------------------------------------------------------\n// 'External' modules --------------------------------------------------------\n// ---------------------------------------------------------------------------\nimport request  from 'request-promise';\nimport errors   from 'request-promise/errors';\nimport humps    from 'humps';\nimport R        from 'ramda';\n\n// ---------------------------------------------------------------------------\n// Project modules -----------------------------------------------------------\n// ---------------------------------------------------------------------------\nimport {\n  getter\n, publisher\n} from '../request';\n\nimport * as I   from '../api/sharedInterfaces';\nimport * as Api from '../api/';\n\n// ---------------------------------------------------------------------------\n// Types ---------------------------------------------------------------------\n// ---------------------------------------------------------------------------\nexport interface GenericObj { [keys: string]: any }\n\nexport interface Getter\n  { apiKey: string\n  , url: string\n  }\n\nexport interface Publisher\n  { method: string\n  , apiKey?: string\n  , body?: Api.AccountCreateRequest\n         | Api.AccountUpdateRequest\n         | Api.Credentials\n         | Api.InvoiceCreateRequest\n         | Api.InvoiceChangeStateRequest\n         | Api.SequenceCreateRequest\n         | Api.ItemsCreateRequest\n  , url: string\n  , root?: string\n  }\n\n// ---------------------------------------------------------------------------\n// Internal API url functions ------------------------------------------------\n// ---------------------------------------------------------------------------\nexport const baseUrl = accountName =>\n  `https://${accountName}.app.invoicexpress.com`;\n\n// ---------------------------------------------------------------------------\n// Internal API request functions --------------------------------------------\n// ---------------------------------------------------------------------------\nexport interface PublisherPost\n  { method: string\n  , apiKey?: string\n  , url: string\n  }\n\nexport type PublisherPut = PublisherPost;\n\nexport const unAuthPostSetup = (urlFn) : PublisherPost =>\n  ( { method: 'POST'\n    , url: urlFn()\n    });\n\nexport const postSetup = (auth: I.Auth, urlFn) : PublisherPost => {\n  const { accountName, apiKey } = auth;\n  return (\n    { method: 'POST'\n    , apiKey\n    , url: urlFn({accountName})\n    });\n  };\n\nexport const putSetup = (auth: I.Auth, urlFn, data) : PublisherPut => {\n  const { accountName, apiKey } = auth;\n  return (\n    { method: 'PUT'\n    , apiKey\n    , url: urlFn({accountName, ...data})\n    });\n  };\n\nexport const getSetup = (auth: I.Auth, urlFn, data = {}) : I.Getter => {\n  const { accountName, apiKey } = auth;\n  return (\n    { apiKey\n    , url: urlFn({accountName, ...data})\n    });\n  };\n\nexport const listSetup =\n  ( auth: I.Auth\n  , urlFn\n  , params: GenericObj\n  ) : I.Getter => {\n  const { accountName, apiKey } = auth;\n  const formattedParams =\n    Object.entries(humps.decamelizeKeys(params))\n          .map(([key,value]) => `${key}=${value}`)\n          .join('&');\n  return (\n    { apiKey\n    , url: `${urlFn({accountName})}?${formattedParams}`\n    });\n  };\n\n// ---------------------------------------------------------------------------\n// Internal API utility functions --------------------------------------------\n// ---------------------------------------------------------------------------\n\n/** Assure all array returning functions really return arrays\n *  and not single object when array.length === 1\n */\nexport const toArray = (arrayOrElement) => Array.isArray(arrayOrElement)\n                                          ? arrayOrElement\n                                          : [arrayOrElement];\n"]}