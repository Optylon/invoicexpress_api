{"version":3,"sources":["lib/api/sharedInterfaces.ts"],"names":["SendOptions","TermsAndConditions","PerPage"],"mappings":";;;;;AAAA;AACE;AACF;AACA;AAoBA,IAAYA,6CAAZ;AAAA,CAAA,UAAYA,WAAZ,EAAuB;AACnBA,gBAAAA,YAAA,cAAA,IAAA,CAAA,IAAA,cAAA;AACAA,gBAAAA,YAAA,sBAAA,IAAA,CAAA,IAAA,sBAAA;AACAA,gBAAAA,YAAA,gCAAA,IAAA,CAAA,IAAA,gCAAA;AACD,CAJH,EAAYA,wBAAAA,WAAA,GAAAA,cAAW,EAAX,CAAZ;AAMA,IAAYC,2DAAZ;AAAA,CAAA,UAAYA,kBAAZ,EAA8B;AAC1BA,uBAAAA,mBAAA,aAAA,IAAA,CAAA,IAAA,aAAA;AACAA,uBAAAA,mBAAA,UAAA,IAAA,CAAA,IAAA,UAAA;AACD,CAHH,EAAYA,+BAAAA,kBAAA,GAAAA,qBAAkB,EAAlB,CAAZ;AAuBA,IAAYC,qCAAZ;AAAA,CAAA,UAAYA,OAAZ,EAAmB;AACfA,YAAAA,QAAA,WAAA,IAAA,EAAA,IAAA,WAAA;AACAA,YAAAA,QAAA,WAAA,IAAA,EAAA,IAAA,WAAA;AACAA,YAAAA,QAAA,WAAA,IAAA,EAAA,IAAA,WAAA;AACD,CAJH,EAAYA,oBAAAA,OAAA,GAAAA,UAAO,EAAP,CAAZ","file":"sharedInterfaces.js","sourcesContent":["// import {\n  // InvoiceExpressCountry\n// , InvoiceExpressCountryCode\n// } from '../../lib/country';\n\n// brought from main project\nexport type Id = number;\n\n// export type GenericObj = { [keys: string]: any };\n\n// Invoice Express\nexport interface Auth\n  { apiKey      : string\n  , accountName : string\n  }\n\nexport interface Getter\n  { apiKey: string\n  , url: string\n  }\n\nexport type SupportedLanguages = 'pt' | 'en' | 'es';\n\nexport enum SendOptions\n  { OnlyOriginal = 1\n  , OriginalAndDuplicate = 2\n  , OriginalDuplicateAndTriplicate = 3\n  }\n\nexport enum TermsAndConditions\n  { NotAccepted = 0\n  , Accepted    = 1\n  }\n\nexport interface IdBase\n  { fiscalId?         : string\n  , email             : string\n  }\n\nexport interface Address\n  { address?      : string\n  , postalCode?   : string\n  , city?         : string\n  }\n\n// Gotta find a better name for this one\nexport type TypeType = 'array';\n\nexport interface Type\n  { type : TypeType\n  }\n\nexport enum PerPage\n  { PerPage10 = 10\n  , PerPage20 = 20\n  , PerPage30 = 30\n  }\n"]}