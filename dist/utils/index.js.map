{"version":3,"sources":["utils/index.ts"],"names":["debug","val","Object","inspect","omit","depth","colors","isProdEnv","process","env","NODE_ENV","isDevEnv"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEO,IAAMA,wBAAQ,SAARA,KAAQ,MAAG;AACtB,QAAIC,eAAeC,MAAnB,EAA2B;AACzB,eAAO,eAAKC,OAAL,CACH,gBAAEC,IAAF,CAAO,CAAE,QAAF,EACE,YADF,EAEE,QAFF,EAGE,SAHF,EAIE,eAJF,EAKE,KALF,CAAP,EAKiBH,GALjB,CADG,EAOH,EAAEI,OAAO,IAAT,EAAeC,QAAQ,IAAvB,EAPG,CAAP;AASD,KAVD,MAUO;AACL,eAAO,eAAKH,OAAL,CAAaF,GAAb,EAAkB,EAAEI,OAAO,IAAT,EAAeC,QAAQ,IAAvB,EAAlB,CAAP;AACD;AACF,CAdM;AAgBA,IAAMC,gCAAYC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA3C;AACA,IAAMC,8BAAYH,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA3C","file":"index.js","sourcesContent":["import R    from 'ramda';\nimport util from 'util';\n\nexport const debug = val => {\n  if (val instanceof Object) {\n    return util.inspect(\n        R.omit([ 'client'\n               , 'connection'\n               , 'socket'\n               , 'request'\n               , 'ReadableState'\n               , 'req'], val)\n      , { depth: null, colors: true}\n    );\n  } else {\n    return util.inspect(val, { depth: null, colors: true});\n  }\n};\n\nexport const isProdEnv = process.env.NODE_ENV === 'production';\nexport const isDevEnv  = process.env.NODE_ENV !== 'production';\n"]}